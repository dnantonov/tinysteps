import json
from flask import Flask, render_template, request, redirect, url_for
from wtforms.validators import InputRequired, Length
from flask_wtf import FlaskForm
from wtforms import StringField, RadioField


app = Flask(__name__)
app.secret_key = "my_super_secret_key"

WEEKDAYS = {
    'mon': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
    'tue': '–í—Ç–æ—Ä–Ω–∏–∫',
    'wed': '–°—Ä–µ–¥–∞',
    'thu': '–ß–µ—Ç–≤–µ—Ä–≥',
    'fri': '–ü—è—Ç–Ω–∏—Ü–∞',
    'sat': '–°—É–±–±–æ—Ç–∞',
    'sun': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
}

ICONS = {
    'travel': '‚õ±',
    'relocate': 'üöú',
    'study': 'üè´',
    'work': 'üè¢'
}


class BookingForm(FlaskForm):
    name = StringField("–í–∞—Å –∑–æ–≤—É—Ç", [InputRequired()])
    phone = StringField("–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω", [InputRequired()])


class RequestForm(FlaskForm):
    name = StringField("–í–∞—Å –∑–æ–≤—É—Ç", [InputRequired()])
    phone = StringField("–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω", [InputRequired()])
    goal = RadioField(
        '–ö–∞–∫–∞—è —Ü–µ–ª—å –∑–∞–Ω—è—Ç–∏–π?',
        choices=[('–î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π', '–î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π'), ('–î–ª—è —à–∫–æ–ª—ã', '–î–ª—è —à–∫–æ–ª—ã'),
                 ('–î–ª—è —Ä–∞–±–æ—Ç—ã', '–î–ª—è —Ä–∞–±–æ—Ç—ã'), ('–î–ª—è –ø–µ—Ä–µ–µ–∑–¥–∞', '–î–ª—è –ø–µ—Ä–µ–µ–∑–¥–∞')]
    )
    time = RadioField(
        '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –µ—Å—Ç—å?',
        choices=[('1-2 —á–∞—Å–∞ –≤ –Ω–µ–¥–µ–ª—é', '1-2 —á–∞—Å–∞ –≤ –Ω–µ–¥–µ–ª—é'), ('3-5 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é', '3-5 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é'),
                 ('5-7 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é', '5-7 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é'), ('7-10 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é', '7-10 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é')]
    )


with open("db.json", "r", encoding='utf-8') as f:
    goals, teachers = json.load(f)


@app.route('/')
def index():
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    """
    return render_template('index.html')


@app.route('/all')
def all_teachers():
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ –≤—Å–µ–º–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏
    """
    return render_template('all.html')


@app.route('/goals/<goal>/')
def teachers_by_goal(goal):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π
    """
    teachers_goal = []
    # —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ü–µ–ª—è–º –æ–±—É—á–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
    for teacher in teachers:
        if goal in teacher['goals']:
            teachers_goal.append(teacher)
    # —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
    sorted_teachers = sorted(teachers_goal, key=lambda k: k['rating'])[::-1]
    # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è —Ü–µ–ª–∏ –∏ –¥–æ—Å—Ç–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    icon = ICONS[goal]
    goal = goals[goal]
    return render_template('goal.html', goal=goal, icon=icon, teachers=sorted_teachers)


@app.route('/profiles/<int:teacher_id>/')
def teacher_profile(teacher_id):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    """
    teacher = teachers[teacher_id]
    teacher_goals = [goals[x] for x in teacher["goals"]]
    days = teacher["free"]
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –∫–∞–∫–∏—Ö –¥–Ω—è—Ö –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç
    free_days = {}
    for day in days.keys():
        free_days[day] = all(x is False for x in teacher["free"][day].values())
    return render_template('profile.html', teacher=teacher, goals=teacher_goals,
                           days=days, free_days=free_days)


@app.route('/request/')
def request_select():
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã-–∑–∞—è–≤–∫–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
    """
    form = RequestForm()
    return render_template('request.html', form=form)


@app.route('/request_done/', methods=['GET', 'POST'])
def request_done():
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ json
    """
    if request.method == 'POST':
        goal = request.form.get('goal')
        time = request.form.get('time')
        name = request.form.get('name')
        phone = request.form.get('phone')
        data = {"goal": goal, "time": time, "name": name, "phone": phone}
        with open("request.json", "a", encoding='utf-8') as db:
            json.dump(data, db, indent=4)
        return render_template('request_done.html', goal=goal, time=time,
                               name=name, phone=phone)


@app.route('/booking/<int:teacher_id>/<day>/<time>/')
def booking_teacher(teacher_id, day, time):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã-–∑–∞—è–≤–∫–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ
    """
    form = BookingForm()
    selected_day = WEEKDAYS[day]
    teacher = teachers[teacher_id]
    return render_template('booking.html', teacher_id=teacher_id, day=day, full_day=selected_day,
                           time=time, teacher=teacher, form=form)


@app.route('/booking_done/', methods=['GET', 'POST'])
def booking_done():
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ–π –∑–∞—è–≤–∫–∏ —Ñ–æ—Ä–º—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ json
    """
    if request.method == 'POST':
        name = request.form.get('name')
        phone = request.form.get('phone')
        day = WEEKDAYS[request.form.get('clientWeekday')]
        time = request.form.get('clientTime')
        data = {'name': name, 'phone': phone, 'day': day, 'time': time}
        with open("booking.json", "a", encoding='utf-8') as db:
            json.dump(data, db, indent=4)
        return render_template('booking_done.html', name=name, phone=phone, day=day, time=time)
    else:
        return render_template('booking.html')


app.run(port=5000, debug=True)
